"0","#Preparing data for plotting Population map."
"0",""
"0","tb_pop<- rbind(top_pop,bottom_pop)%>% #merging both tables into one"
"0","arrange(desc(Population)) # arranging by population descending order"
"0",""
"0","#Tuvalu coordinates are missing from World_map, downloaded from https://github.com/Thom-J-H/map_Gap_2_Tidy/blob/main/tuvalu_coords.rds"
"0","tuvalu_coords <- readRDS(""D:/Github/Data Analysis Projects/Global EDA_Visualization in R/tuvalu_coords.rds"")"
"0","colnames(tuvalu_coords)[5] = ""Country"""
"0",""
"0","#Customizing world map data to match our dataset"
"0","world_map <- map_data(""world"")%>%"
"0","  select(long, lat, group, order, region)"
"0","  colnames(world_map)[5] = ""Country""   #changing column name from region to country to match the data set"
"0","  "
"0","  world_map<- world_map%>%"
"0","  mutate(Country = recode(Country, `USA` = ""United States"","
"0","                          `Bahamas` = ""The Bahamas"","
"0","                          `Republic of Congo` = ""Republic of the Congo"","
"0","                          `Gambia` = ""The Gambia"","
"0","                          `UK` = ""United Kingdom"","
"0","                          `Trinidad` = ""Trinidad and Tobago"","
"0","                          `Tobago` = ""Trinidad and Tobago"","
"0","                          `Vatican` = ""Vatican City"","
"0","                          `Ireland` = ""Republic of Ireland"","
"0","                          `Micronesia` = ""Federated States of Micronesia"","
"0","                          `Palestine` = ""Palestinian National Authority"","
"0","                          `Swaziland` = ""Eswatini"","
"0","                          `Timor-Leste` = ""East Timor"","
"0","                          `Antigua` = ""Antigua and Barbuda"","
"0","                          `Barbuda` = ""Antigua and Barbuda"","
"0","                          `Saint Kitts` = ""Saint Kitts and Nevis"","
"0","                          `Nevis` = ""Saint Kitts and Nevis"","
"0","                          `Saint Vincent` = ""Saint Vincent and the Grenadines"","
"0","                          `Grenadines` = ""Saint Vincent and the Grenadines"""
"0","                                 )"
"0","                   )  "
"0","  "
"0","#adding Tuvalu coordinates to world map"
"0","world_map_complete<- rbind(world_map,tuvalu_coords) #merging both tables into one"
"0",""
"0",""
"0","# Check if there is any country is available at the data set and not available at the world map"
"0","world_map_check<- world_map_complete%>%"
"0","  distinct(Country)"
"0","dataset_check<- dataset%>%"
"0","  select(Country)"
"0","result1<- anti_join(dataset_check, world_map_check, by = c(""Country""))"
"0",""
"0",""
"0","# Joining World map dataset with Population dataset."
"0","pop_map<- left_join(world_map_complete, pop, by = ""Country"")"
"0","pop_map[is.na(pop_map)] <- 0"
"0",""
"0","# Plot World Population map."
"0","ggplot() +"
"0","  geom_polygon(data = pop_map,"
"0","               aes(x = long, y =lat, group = group, fill = Population),"
"0","               color = ""white"""
"0","               ) +"
"0","  scale_fill_gradientn("
"0","    values = scales::rescale(c(0,10000,100000,1000000,10000000,100000000,500000000,1397715000)),"
"0","    breaks = c(0,10000,100000,1000000,10000000,100000000,500000000,1397715000),"
"0","    labels = c(""No Data"",""< 10,000"",""< 100,000"",""< 1,000,000"","
"0","               ""< 10,000,000"",""< 100,000,000"",""< 500,000,000"",""</= 1,397,715,000""),"
"0","    colours = blues9,"
"0","                      ) +"
"0","  guides(fill = guide_legend(reverse = T)) + "
"0","  labs(fill = 'Population',"
"0","       #title = 'World Population',"
"0","       #subtitle = 'Population by Country 2023',"
"0","       x = NULL,"
"0","       y = NULL"
"0","       ) +"
"0","  theme_bw()+"
"0","  theme(text = element_text(color = '#01014B'),"
"0","        plot.title = element_text(size = 12,  family = ""serif""),"
"0","        plot.subtitle = element_text(size = 10, family = ""serif""),"
"0","        axis.ticks = element_blank(),"
"0","        axis.text = element_blank(),"
"0","        panel.grid = element_line(color = ""white""),"
"0","        panel.background = element_rect(fill = '#D9E1F2'),"
"0","        plot.background = element_rect(fill = 'white'),"
"0","        legend.position = c(.1,.36),"
"0","        legend.background = element_blank(),"
"0","        legend.key = element_rect(color = 'black'),"
"0","        legend.key.size = unit(0.5,'cm'),"
"0","        legend.text = element_text(size=9, family = ""serif""),"
"0","        legend.title = element_text(size = 10,"
"0","                                    family = ""serif"","
"0","                                    face = ""bold"""
"0","                                   ),"
"0","        ) +"
"0","  geom_point(data = top_pop,"
"0","             aes (x = Longitude, y = Latitude, color = ""Top 10""),"
"0","             size = 2"
"0","             ) +"
"0","  geom_label_repel(data = top_pop,"
"0","                   aes(x = Longitude, y = Latitude, label = Country),"
"0","                   box.padding   = 0.25, "
"0","                   point.padding = 0.5,"
"0","                   segment.color = 'black',"
"0","                   color = 'red',"
"0","                   position = position_dodge(width = 0)"
"0","                   ) +"
"0","  geom_point(data = bottom_pop,"
"0","             aes (x = Longitude, y = Latitude, color = ""Bottom 10""),"
"0","             size = 2"
"0","             ) +"
"0","  geom_label_repel(data = bottom_pop,"
"0","                   aes(x = Longitude, y = Latitude, label = Country),"
"0","                   box.padding   = 0.25,"
"0","                   point.padding = 0.5,"
"0","                   segment.color = 'black',"
"0","                   color = 'darkgreen',"
"0","                   position = position_dodge(width = 0)"
"0","                   ) +"
"0","  scale_colour_manual(name=""Category Top/Bottom"", values = c(""Top 10""=""red"",""Bottom 10""=""darkgreen""))"
